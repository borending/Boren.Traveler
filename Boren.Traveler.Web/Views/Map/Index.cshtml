@{
    ViewData["Title"] = "地圖";
}

@section Styles {
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Material+Icons" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@@mdi/font@5.x/css/materialdesignicons.min.css" />
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.13/css/all.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900|Material+Icons" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vuetify@3.6.14/dist/vuetify.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vuetify@3.6.14/dist/vuetify-labs.css" />
    <style>
        #map {
            height: 768px;
            width: 100%;
        }
    </style>
}

<div class="row">
    <div class="col-md-9">
        <div id="map"></div>
    </div>
    <div class="col-md-3">
        <div id="app">
            <v-text-field append-inner-icon="mdi-magnify"
                          density="comfortable"
                          variant="solo"
                          single-line
                          label="請輸入地點名稱"
                          v-model="text"
                          v-on:click:append-inner="searching">
            </v-text-field>
            <div id="list" v-for="item in list">
                <p>{{item}}</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/vue@3.4.35/dist/vue.global.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vuetify@3.6.14/dist/vuetify.min.js"></script>
    <script>
        let API_KEY = 'AIzaSyDBkDAJEa7mkUlCQ679vaC1guj3hJ8TOG8';
        (g => {
            var h, a, k, p = "The Google Maps JavaScript API",
                c = "google",
                l = "importLibrary",
                q = "__ib__",
                m = document,
                b = window;
            b = b[c] || (b[c] = {});
            var d = b.maps || (b.maps = {}),
                r = new Set,
                e = new URLSearchParams,
                u = () => h || (h = new Promise(async (f, n) => {
                    await (a = m.createElement("script"));
                    e.set("libraries", [...r] + "");
                    for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]);
                    e.set("callback", c + ".maps." + q);
                    a.src = `https://maps.${c}apis.com/maps/api/js?` + e;
                    d[q] = f;
                    a.onerror = () => h = n(Error(p + " could not load."));
                    a.nonce = m.querySelector("script[nonce]")?.nonce || "";
                    m.head.append(a)
                }));
            d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n))
        })({
            key: API_KEY,
            v: "weekly",
        });

        let map;
        async function initMap() {
            const position = { lat: 34.70317583942373, lng: 135.4976065215495 };
            const { Map } = await google.maps.importLibrary("maps");
            const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

            map = new Map(document.getElementById("map"), {
                center: position,
                zoom: 16,
                mapId: "DEMO_MAP_ID"
            });

            // const marker = new AdvancedMarkerElement({
            //     map: map,
            //     position: position,
            //     title: "Test",
            // });
        }
        initMap();

        async function refreshList(queryText, list) {
            const { Place } = await google.maps.importLibrary("places");
            const { places } = await Place.searchByText({
                textQuery: queryText,
                fields: ['displayName', 'location', 'businessStatus'],
                language: 'zh-TW',
                maxResultCount: 7,
                useStrictTypeFiltering: false,
            });

            list.value = []
            for (i = 0; i < places.length; i++) {
                var place = places[i]
                console.log(place.displayName)
                list.value.push(place.displayName)
            }
        }

        async function setMarker(queryText) {
            // const { Place } = await google.maps.importLibrary("places");
            // const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

            // const { places } = await Place.searchByText({
            //     textQuery: text.value,
            //     fields: ['displayName', 'location', 'businessStatus'],
            //     language: 'zh-TW',
            //     maxResultCount: 7,
            //     useStrictTypeFiltering: false,
            // });

            // if (places.length) {
            //     let place = places[0];
            //     const markerView = new AdvancedMarkerElement({
            //         map,
            //         position: place.location,
            //         title: place.displayName,
            //     });

            //     const { LatLngBounds } = await google.maps.importLibrary("core");
            //     const bounds = new LatLngBounds();
            //     bounds.extend(place.location);
            //     map.setCenter(bounds.getCenter());

            // 多筆
            // places.forEach((place) => {
            //     const markerView = new AdvancedMarkerElement({
            //         map,
            //         position: place.location,
            //         title: place.displayName,
            //     });

            //     bounds.extend(place.location);
            //     console.log(place);
            // });

            // map.setCenter(bounds.getCenter());
            //}
            // else
            //     console.log('No results');
        }

    </script>

    <script type="module">
        const { createApp, ref } = Vue
        const { createVuetify } = Vuetify
        const vuetify = createVuetify()

        const app = createApp({
            setup() {
                let text = ref('')
                let list = ref([])

                // 按下搜尋
                async function searching() {
                    console.log(text.value)
                    if (!text.value)
                        return

                    refreshList(text.value, list)
                    text.value = null
                }

                return {
                    text,
                    list,
                    searching
                }
            }
        })
        app.use(vuetify).mount('#app')
    </script>
}